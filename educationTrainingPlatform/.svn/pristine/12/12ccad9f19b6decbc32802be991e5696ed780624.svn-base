package com.foxera.background.dao.impl;

import java.util.List;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.foxera.background.dao.FunctionDao;
import com.foxera.models.Functionalinfo;

@Repository("functiondao")
public class FunctionDaoImpl implements FunctionDao{
	@Autowired
	private SessionFactory sessionFactory;

	@Override
	public boolean insertOrUpdateFunction(Functionalinfo functionalinfo) {
		Session session=this.sessionFactory.getCurrentSession();
		try {
			session.saveOrUpdate(functionalinfo);
			return true;
		} catch (Exception e) {
			e.printStackTrace();
			return false;
		}
	}

	@Override
	public boolean deleteFunction(Functionalinfo functionalinfo) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean updateFunction(Functionalinfo functionalinfo) {
		// TODO Auto-generated method stub
		return false;
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<Functionalinfo> getFunctions(int index, int pagesize) {
		Session session=this.sessionFactory.getCurrentSession();
		List<Functionalinfo> funcs=session.createQuery("from Functionalinfo f")
				.setFirstResult(index*pagesize)
				.setMaxResults(pagesize)
				.list();
		return funcs;
	}

	@Override
	public List<Functionalinfo> getFunctions(long modulecode,
			String functionname, long parentfunc, int index, int pagesize) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Functionalinfo getFunction(long functionid) {
		Session session=this.sessionFactory.getCurrentSession();
		Functionalinfo func=(Functionalinfo) session.createQuery("from Functionalinfo f where f.functionid=:functionid")
				.setLong("functionid", functionid).uniqueResult();
		return func;
	}
}
