package com.foxera.background.controller;

import java.io.IOException;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.foxera.background.service.SystemSetFunctionService;
import com.foxera.models.Functionalinfo;
import com.foxera.models.Userinfo;
/**
 * 系统设定/功能管理 控制器
 * @author fox
 *
 */
@RequestMapping("/background")
@Controller
public class SystemSetFunctionController {
	@Autowired
	private SystemSetFunctionService systemSetFunctionService;
	
	/**
	 * 进入功能管理页面，查询功能列表
	 * @param request
	 * @return
	 */
	@RequestMapping(value="/functionManage.html",method=RequestMethod.GET)
	public String toFuncManagerPage(HttpServletRequest request){
		List<Functionalinfo> funcs=this.systemSetFunctionService.getFunctionalinfos(0, CommonComponent.PAGESIZE);
		request.setAttribute("functions", funcs);
		return "background/systemSet/functionManage";
	}
	/**
	 * 按条件查询功能信息
	 * @param request
	 * @return
	 */
	@RequestMapping(value="/queryfuns.action",method=RequestMethod.GET)
	public String doQueryFuncs(HttpServletRequest request){
		String modulecode=request.getParameter("modulecode");//模组代码
		String functionname=request.getParameter("functionname");//功能名称
		String parentfunc=request.getParameter("parentfuncid");//父模组,functionid
		List<Functionalinfo> funcs=this.systemSetFunctionService.getFunctionalinfos(modulecode,functionname,parentfunc,0, CommonComponent.PAGESIZE);
		request.setAttribute("functions", funcs);
		return "background/systemSet/functionManage";
	}
	
	/**
	 * 进入新增功能资料页面
	 * @param request
	 * @return
	 */
	@RequestMapping(value="/functionManageCreate.html",method=RequestMethod.GET)
	public String toAddFuncPage(HttpServletRequest request){
		return "background/systemSet/functionManageCreate";
	}
	
	/**
	 * 执行新增功能资料操作
	 * @param request
	 * @param response
	 * @throws IOException 
	 */
	@RequestMapping(value="/addfunc.action",method=RequestMethod.GET)
	public void doAddFunc(HttpServletRequest request,HttpServletResponse response) throws IOException{
		String modulecode=request.getParameter("modulecode");//模组代码
		String menuorder=request.getParameter("menuorder");//顺序号
		String parentfunc=request.getParameter("parentfuncid");//父模组,functionid
		String functionname=request.getParameter("functionname");//功能名称(窗口名称)
		String urls=request.getParameter("urls");//功能网页地址
		String description=request.getParameter("description");//模组描述
		String functioncode=request.getParameter("functioncode");//功能码
		String functiondesc=request.getParameter("functiondesc");//功能描述
		Userinfo userinfo=(Userinfo) request.getSession().getAttribute("user");
		boolean flag=this.systemSetFunctionService.addFunc(modulecode, menuorder, parentfunc, functionname, urls, description, functioncode, functiondesc, userinfo.getUserid());
//		boolean flag=this.systemSetFunctionService.addFunc("test01", "1", null, "系统设定", null, "这是系统设定模组描述", "1", "这是功能描述", Long.parseLong("1"));
//		boolean flag=this.systemSetFunctionService.addFunc("test02", "2", "1", "功能管理", "/functionManage.html", "这是系统设定模组描述", "101", "这是功能描述", Long.parseLong("1"));
		if(flag){
			response.getWriter().write("true");
		}else{
			response.getWriter().write("false");
		}
	}
	/**
	 * 进入修改功能资料页面
	 * @param request
	 * @return
	 */
	@RequestMapping(value="/functionManageModify.html",method=RequestMethod.GET)
	public String toModifyFuncPage(HttpServletRequest request){
		String functionid=request.getParameter("functionid");
		Functionalinfo func=this.systemSetFunctionService.getFunctionalinfo(Long.parseLong(functionid));
		request.setAttribute("function", func);
		return "background/systemSet/functionManageCreate";
	}
	
	/**
	 * 执行修改功能资料操作
	 * @param request
	 * @param response
	 * @throws IOException 
	 */
	@RequestMapping(value="/modifyfunc.action",method=RequestMethod.GET)
	public void doModifyFunc(HttpServletRequest request,HttpServletResponse response) throws IOException{
		String functionid=request.getParameter("functionid");//功能id
		String modulecode=request.getParameter("modulecode");//模组代码
		String menuorder=request.getParameter("menuorder");//顺序号
		String parentfunc=request.getParameter("parentfuncid");//父模组,functionid
		String functionname=request.getParameter("functionname");//功能名称(窗口名称)
		String urls=request.getParameter("urls");//功能网页地址
		String description=request.getParameter("description");//模组描述
		String functioncode=request.getParameter("functioncode");//功能码
		String functiondesc=request.getParameter("functiondesc");//功能描述
		Userinfo userinfo=(Userinfo) request.getSession().getAttribute("user");
		boolean flag=this.systemSetFunctionService.modifyFunc(functionid,modulecode, menuorder, parentfunc, functionname, urls, description, functioncode, functiondesc, userinfo.getUserid());
//		boolean flag=this.systemSetFunctionService.modifyFunc("test01", "1", null, "系统设定", null, "这是系统设定模组描述", "1", "这是功能描述", Long.parseLong("1"));
//		boolean flag=this.systemSetFunctionService.modifyFunc("2","test02", "2", "1", "功能管理", "/functionManage.html", "这是系统设定模组描述", "101", "这是功能描述hahaha", Long.parseLong("1"));
		if(flag){
			response.getWriter().write("true");
		}else{
			response.getWriter().write("false");
		}
		
	}
	/**
	 * 系统设定-功能管理-新增-父模组
	 * @param request
	 * @param response
	 * @return
	 */
	@RequestMapping(value="/functionManageChoose.html",method=RequestMethod.GET)
	public String FunctionManageChoose(HttpServletRequest request,HttpServletResponse response){
		return "background/systemSet/functionManageChoose";
	}


}
